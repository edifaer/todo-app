{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-add-form/item-add-form.js","App.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","React","Component","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","btnClass","key","onClick","TodoListItem","onDeleted","onToggleImportant","onToggleDone","classNames","important","defaultProps","TodoList","todos","elements","item","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d495e4d5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './search-panel.css';\r\n\r\nclass SearchPanel extends React.Component {\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                   className=\"form-control search-input\"\r\n                   placeholder=\"type to search\"\r\n                   value={this.state.term}\r\n                   onChange={this.onSearchChange}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\nimport \"./item-status-filter.css\"\r\n\r\nclass ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n\r\n    render() {\r\n\r\n        const {filter, onFilterChange} = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const btnClass = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${btnClass}`}\r\n                        key={name}\r\n                        onClick={() => onFilterChange(name)}>\r\n                    {label}\r\n                </button>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\nimport './todo-list-item.css';\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nclass TodoListItem extends Component {\r\n\r\n    render() {\r\n        const {\r\n            label, onDeleted,\r\n            onToggleImportant, onToggleDone,\r\n            done, important\r\n        } = this.props;\r\n        let classNames = 'todo-list-item';\r\n\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n      <span className=\"todo-list-item-label\"\r\n            onClick={onToggleDone}>\r\n        {label}\r\n      </span>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-success btn-sm float-right\"\r\n              onClick={onToggleImportant}>\r\n        <i className=\"fa fa-exclamation\"/>\r\n      </button>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm float-right\"\r\n              onClick={onDeleted}>\r\n        <i className=\"fa fa-trash-o\"/>\r\n      </button>\r\n    </span>\r\n        );\r\n    }\r\n}\r\n\r\nTodoListItem.propTypes = {\r\n    label: PropTypes.any,\r\n    important: PropTypes.bool\r\n}\r\n\r\nTodoListItem.defaultProps = {important: false}\r\n\r\nexport default TodoListItem;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n\r\n    const elements = todos.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem {...itemProps}\r\n                              onDeleted={() => onDeleted(id)}\r\n                              onToggleImportant={() => onToggleImportant(id)}\r\n                              onToggleDone={() => onToggleDone(id)}/>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport './item-add-form.css'\r\n\r\nexport default class ItemAddForm extends React.Component {\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className='item-add-form d-flex'\r\n                  onSubmit={this.onSubmit}>\r\n\r\n                <input type='text'\r\n                       className='form-control'\r\n                       onChange={this.onLabelChange}\r\n                       placeholder='What needs to be done'\r\n                       value={this.state.label} />\r\n                <button className='btn btn-outline-secondary'>Add\r\n                </button>\r\n            </form>)\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport AppHeader from \"./components/app-header/app-header\";\r\nimport SearchPanel from \"./components/search-panel/search-panel\";\r\nimport ItemStatusFilter from \"./components/item-status-filter/item-status-filter\";\r\nimport TodoList from \"./components/todo-list/todo-list\";\r\nimport ItemAddForm from \"./components/item-add-form/item-add-form\";\r\n\r\nclass App extends React.Component {\r\n    maxId = 1;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Cofee'),\r\n            this.createTodoItem('Learn React JS'),\r\n            this.createTodoItem('Have a Lunch'),\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({todoData}) => {\r\n            const newArray = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName]\r\n        };\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    };\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        })\r\n    };\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n    render() {\r\n        const {todoData, term, filter} = this.state;\r\n\r\n        const visibleItems = this.filter(\r\n            this.search(todoData, term), filter);\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\r\n                    <ItemStatusFilter filter={filter}\r\n                                      onFilterChange={this.onFilterChange}/>\r\n                </div>\r\n                <TodoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}/>\r\n\r\n                <ItemAddForm onItemAdded={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}